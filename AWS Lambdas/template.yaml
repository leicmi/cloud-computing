AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  This is an AWS SAM (Serverless Application Model) template.
  You can build all lambdas using `sam build` and deploy them using `sam deploy --guided`.
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals: 
  Function: 
    Timeout: 5
    Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html

Parameters:
  ConversionFileType:
    Type: String
    Default: png
  ConversionMimeType:
    Type: String
    Default: image/png 
  ThumbnailWidth:
    Type: Number
    Default: 500

Resources: 
  LamqBucket:
    Type: AWS::S3::Bucket
   Properties:
    LifecycleConfiguration:
      Rules:
        - Id: AutoDeletion
        Prefix: ''
        Status: 'Enabled'
        ExpirationInDays: 1
      
  ResultsBucket:
    Type: AWS::S3::Bucket
   Properties:
    LifecycleConfiguration:
      Rules:
        - Id: AutoDeletion
        Prefix: ''
        Status: 'Enabled'
        ExpirationInDays: 1
        
  ImageMagick:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:145266761615:applications/image-magick-lambda-layer
        SemanticVersion: 1.0.0

  ConvertFileFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Timeout: 180
      MemorySize: 1024
      Runtime: nodejs10.x
      CodeUri: ImageMagickSrc/
      Layers:
          - !GetAtt ImageMagick.Outputs.LayerVersion
      Policies:
      - S3CrudPolicy:
          BucketName: !Sub "${AWS::StackName}-*"
      - DynamoDBWritePolicy: 
          TableName: !Ref JobTable
      Environment:
        Variables:
          OUTPUT_BUCKET: !Ref ResultsBucket
          EXTENSION: !Sub '.${ConversionFileType}'
          MIME_TYPE: !Ref ConversionMimeType
          THUMB_WIDTH: !Ref ThumbnailWidth
          DynamoDBTable: !Ref JobTable
      Events:
        FileUpload:
          Type: S3
          Properties:
            Bucket: !Ref LamqBucket
            Events: s3:ObjectCreated:*  
  
  ListFunction: 
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties: 
      CodeUri: list/
      Handler: list
      Runtime: go1.x
      Events: 
        CatchAll: 
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties: 
            Path: /default/list
            Method: GET
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables: 
          DynamoDBTable: !Ref JobTable
      Policies: # More info: https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst and here: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-template-list.html
        - DynamoDBReadPolicy: 
            TableName: !Ref JobTable
  PendingFunction: 
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties: 
      CodeUri: pending/
      Handler: pending
      Runtime: go1.x
      Events: 
        CatchAll: 
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties: 
            Path: /default/pending
            Method: POST
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables: 
          DynamoDBTable: !Ref JobTable
      Policies: # More info: https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst and here: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-template-list.html
        - DynamoDBReadPolicy: 
            TableName: !Ref JobTable
  UploadFunction: 
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties: 
      CodeUri: upload/
      Handler: upload
      Runtime: go1.x
      Events: 
        CatchAll: 
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties: 
            Path: /default/upload
            Method: POST
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables: 
          DynamoDBTable: !Ref JobTable
          Bucket: !Ref LamqBucket
      Policies: # More info: https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst and here: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-template-list.html
        - DynamoDBWritePolicy: 
            TableName: !Ref JobTable
        - S3WritePolicy: 
            BucketName: !Ref LamqBucket
  JobTable: 
    Type: AWS::DynamoDB::Table # More info: https://docs.aws.amazon.com/de_de/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html
    Properties: 
      AttributeDefinitions: 
        - AttributeName: id
          AttributeType: S
      KeySchema: 
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput: 
        ReadCapacityUnits: 5 # please note that only 25 RCUs and 25WCUs are included in the AWS free tier (IIRC).
        WriteCapacityUnits: 5

Outputs: # Shown in terminal when `sam deploy` is invoked
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  API: 
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
  LamqBucket:
    Description: "Upload S3 bucket"
    Value: !Ref LamqBucket
  ResultsBucket:
    Description: "Results S3 bucket"
    Value: !Ref ResultsBucket
  ConvertFileFunctionLogGroupName:
    Description: "LogGroupName of the ConvertFileFunction. Put this as the value for *logGroupName* in LogGroupName of the ConvertFileFunction. Prefix it with '/aws/lambda/' and put this as the value for *logGroupName* in config.yml"
    Value: !Ref ConvertFileFunction
